<?xml version="1.0" encoding="UTF-8" ?>

<schema name="capitolwords" version="1.2">
  <types>

    <!-- Default numeric field types. For faster range queries, consider the
        tint/tfloat/tlong/tdouble types. 
    -->
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>

    <!-- The format for this date field must be 1995-12-31T23:59:59Z, -->
   <fieldType name="date" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/>

<!-- The StrField type is not analyzed, but indexed/stored verbatim.  
       - StrField and TextField support an optional compressThreshold which
       limits compression (if enabled in the derived fields) to values which
       exceed a certain size (in characters).
    -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>

   <!-- Strict text field that splits only on whitespace for exact matching of
        words, but has a custom stopword list and normalizes case -->
    <fieldType name="CRtext" class="solr.TextField" positionIncrementGap="100" >
        <analyzer>
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        </analyzer>
    </fieldType>
    <!-- other options we may consider: indexing in reverse as well to support more
        efficient wildcard queries, adding more flexible matching for search including
        synonyms, word delimiters, and stemming-->

    <!-- since fields of this type are by default not stored or indexed,
         any data added to them will be ignored outright.  --> 
    <fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" /> 

 </types>


 <fields>
   <!-- Valid attributes for fields:
     name: mandatory - the name for the field
     type: mandatory - the name of a previously defined type from the 
       <types> section
     indexed: true if this field should be indexed (searchable or sortable)
     stored: true if this field should be retrievable
     compressed: [false] if this field should be stored using gzip compression
       (this will only apply if the field type is compressable; among
       the standard field types, only TextField and StrField are)
     multiValued: true if this field may contain multiple values per document
     omitNorms: (expert) set to true to omit the norms associated with
       this field (this disables length normalization and index-time
       boosting for the field, and saves some memory).  Only full-text
       fields or fields that need an index-time boost need norms.
     termVectors: [false] set to true to store the term vector for a
       given field.
       When using MoreLikeThis, fields used for similarity should be
       stored for best performance.
     termPositions: Store position information with the term vector.  
       This will increase storage costs.
     termOffsets: Store offset information with the term vector. This 
       will increase storage costs.
     default: a value that should be used if no value is specified
       when adding a document.
   -->

   <field name="id" type="string" indexed="true" stored="true" required="true" /> 
   <field name="crdoc" type="string" indexed="true" stored="true" required="true" /> 
   <field name="volume" type="int" indexed="true" stored="true" required="true" /> 
   <field name="number" type="int" indexed="true" stored="true" required="true" /> 
   <field name="date" type="date" indexed="true" stored="true" required="true" /> 
   <field name="chamber" type="string" indexed="true" stored="false" required="true" /> 
   <field name="pages" type="string" indexed="true" stored="true" required="true" /> 
   <field name="document_title" type="CRtext" indexed="true" stored="true" required="false" /> 
    <!-- speaker info that we want ability to search on-->
   <field name="speaker" type="string" indexed="true" stored="true" required="true" /> 
   <field name="speaker_state" type="string" indexed="true" stored="true" required="false" /> 
   <field name="speaker_party" type="string" indexed="true" stored="true" required="false" /> 
   <field name="speaker_bioguide" type="string" indexed="true" stored="true" required="false" /> 
   <field name="speaker_firstname" type="string" indexed="true" stored="true" required="false" /> 
   <field name="speaker_lastname" type="string" indexed="true" stored="true" required="false" /> 
    <!-- multivalued fields -->
   <field name="title" type="CRtext" indexed="true" stored="true" required="false" multiValued="true" /> 
   <field name="speaking" type="CRtext" indexed="true" stored="true" required="false" multiValued="true"/> 
   <field name="quote" type="CRtext" indexed="true" stored="true" required="false" multiValued="true"/> 
   <field name="longquote" type="CRtext" indexed="true" stored="true" required="false" multiValued="true"/> 
    
    <!--
    to be implemented...
   <field name="vote" type="" indexed="true" stored="true" required="false" multiValued="true"/> 
   <field name="time" type="" indexed="true" stored="true" required="false" multiValued="true"/> 
    -->
   
     <!--   Create a "timestamp" field with a default value of "NOW" to indicate
            when each document was indexed.  -->
    <field name="ingestdate" type="date" indexed="true" stored="true" default="NOW" multiValued="false"/>
   
</fields>

 <!-- Field to use to determine and enforce document uniqueness. 
      Unless this field is marked with required="false", it will be a required field
   -->
 <uniqueKey>id</uniqueKey>

 <!-- field for the QueryParser to use when an explicit fieldname is absent -->
 <defaultSearchField>speaking</defaultSearchField>

 <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
 <solrQueryParser defaultOperator="OR"/>

  <!-- copyField commands copy one field to another at the time a document
        is added to the index.  It's used either to index the same field differently,
        or to add multiple fields to the same field for easier/faster searching.  -->
  <!--
   <copyField source="cat" dest="text"/>
   <copyField source="name" dest="text"/>
   <copyField source="manu" dest="text"/>
   <copyField source="features" dest="text"/>
   <copyField source="includes" dest="text"/>
   <copyField source="manu" dest="manu_exact"/>
  -->

</schema>
